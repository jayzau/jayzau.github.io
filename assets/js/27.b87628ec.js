(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{378:function(e,a,s){"use strict";s.r(a);var r=s(42),t=Object(r.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[e._v("#")]),e._v(" Docker")]),e._v(" "),s("blockquote",[s("p",[e._v("Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。")])]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.runoob.com/docker/ubuntu-docker-install.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker安装(Ubuntu)"),s("OutboundLink")],1)]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.runoob.com/docker/centos-docker-install.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker安装(CentOS)"),s("OutboundLink")],1)]),e._v(" "),s("hr"),e._v(" "),s("h3",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[e._v("#")]),e._v(" Nginx")]),e._v(" "),s("blockquote",[s("p",[e._v("Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。")])]),e._v(" "),s("h4",{attrs:{id:"利用docker安装nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#利用docker安装nginx"}},[e._v("#")]),e._v(" 利用Docker安装Nginx")]),e._v(" "),s("p",[e._v("搜索版本")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" search nginx\n")])])]),s("p",[e._v("下载镜像")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" pull nginx:latest\n")])])]),s("p",[e._v("创建容器并运行")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("docker")]),e._v(" run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--name")]),e._v(" mynginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-p")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("8080")]),e._v(":80  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-v")]),e._v(" /etc/nginx/nginx.conf:/etc/nginx/nginx.conf  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-v")]),e._v(" /etc/nginx/log:/var/log/nginx "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-d")]),e._v("  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--restart")]),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("always docker.io/nginx\n")])])]),s("p",[e._v("运行成功后打开8080端口就能看见Nginx欢迎页面。")]),e._v(" "),s("hr"),e._v(" "),s("h3",{attrs:{id:"实际运用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实际运用"}},[e._v("#")]),e._v(" 实际运用")]),e._v(" "),s("p",[e._v("做爬虫可能会需要用到splash来抓取数据，一个splash服务承载力有限，开多个splash服务意味着要开多个端口，所以利用Nginx做个端口转发，还能实现负载均衡。")]),e._v(" "),s("p",[e._v("流程：访问主机8080端口->容器内80端口->splash服务端口1 or 2 or 3")]),e._v(" "),s("h4",{attrs:{id:"第一步-找到docker对应的地址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一步-找到docker对应的地址"}},[e._v("#")]),e._v(" 第一步：找到Docker对应的地址")]),e._v(" "),s("p",[e._v("这里不能够直接写主机地址或者127.0.0.1，主机地址需要额外开放端口，127则会映射到容器内对应端口。\n输入")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("ifconfig")]),e._v("\n")])])]),s("p",[e._v("找到docker那一栏，inet后的地址就是我们需要的。")]),e._v(" "),s("h4",{attrs:{id:"第二步-更改nginx配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二步-更改nginx配置"}},[e._v("#")]),e._v(" 第二步：更改Nginx配置")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("vim")]),e._v(" /etc/nginx/nginx.conf\n")])])]),s("p",[e._v("修改以下部分即可。"),s("code",[e._v("172.17.0.1")]),e._v("为第一步找到的inet地址，端口号为由Docker启动的splash服务映射的端口。weight表示权重。")]),e._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" upstream spalsh {\n            server 172.17.0.1:50000 weight=5;\n            server 172.17.0.1:50001 weight=5;\n            server 172.17.0.1:50002 weight=5;\n            server 172.17.0.1:50003 weight=5;\n            server 172.17.0.1:50004 weight=5;\n            server 172.17.0.1:50005 weight=5;\n            server 172.17.0.1:50006 weight=5;\n    }\n\n    server{ \n            listen 8080; \n                    server_name spalsh; \n\n            location / { \n                    proxy_pass         http://spalsh; \n                    proxy_connect_timeout 100s;\n                    proxy_read_timeout 100s;\n                    proxy_send_timeout 100s;\n            #       proxy_set_header   Host             $host; \n            #       proxy_set_header   X-Real-IP        $remote_addr; \n            #       proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for; \n            } \n    }\n")])])]),s("h4",{attrs:{id:"第三步-重启nginx容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三步-重启nginx容器"}},[e._v("#")]),e._v(" 第三步：重启Nginx容器")]),e._v(" "),s("p",[e._v("使配置生效。")]),e._v(" "),s("p",[e._v("这样一来，爬虫只需要访问固定地址，便可以自动转到不同splash服务上，提高并发量。")])])}),[],!1,null,null,null);a.default=t.exports}}]);